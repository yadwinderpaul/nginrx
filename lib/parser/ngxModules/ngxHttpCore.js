const directives = [
  {
    name: 'absolute_redirect',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'aio_write',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'aio',
    possibleValues: 'on | off | threads[=pool]',
    default: 'of',
    context: 'http, server, location',
  },
  {
    name: 'alias',
    possibleValues: 'path',
    default: '-',
    context: 'location',
  },
  {
    name: 'chunked_transfer_encoding',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'client_body_buffer_size',
    possibleValues: 'size',
    default: '8k|16k',
    context: 'http, server, location',
  },
  {
    name: 'client_body_in_file_only',
    possibleValues: 'on | clean | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'client_body_in_single_buffer',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'client_body_temp_path',
    possibleValues: 'path [level1 [level2 [level3]]]',
    default: 'client_body_temp',
    context: 'http, server, location',
  },
  {
    name: 'client_body_timeout',
    possibleValues: 'time',
    default: '60s',
    context: 'http, server, location',
  },
  {
    name: 'client_header_buffer_size',
    possibleValues: 'size',
    default: '1k',
    context: 'http, server',
  },
  {
    name: 'client_header_timeout',
    possibleValues: 'time',
    default: '60s',
    context: 'http, server',
  },
  {
    name: 'client_max_body_size',
    possibleValues: 'size',
    default: '1m',
    context: 'http, server, location',
  },
  {
    name: 'connection_pool_size',
    possibleValues: 'size',
    default: '256|512',
    context: 'http, server',
  },
  {
    name: 'default_type',
    possibleValues: 'mime-type',
    default: 'text/plain',
    context: 'http, server, location',
  },
  {
    name: 'directio_alignment',
    possibleValues: 'size',
    default: '512',
    context: 'http, server, location',
  },
  {
    name: 'directio',
    possibleValues: 'size | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'disable_symlinks',
    possibleValues: 'off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'error_page',
    possibleValues: 'code ... [=[response]] uri',
    default: '-',
    context: 'http, server, location, if in location',
  },
  {
    name: 'etag',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  // {
  //   name: 'http',
  //   possibleValues: 'block',
  //   default: '-',
  //   context: 'main',
  // },
  {
    name: 'if_modified_since',
    possibleValues: 'off | exact | before',
    default: 'exact',
    context: 'http, server, location',
  },
  {
    name: 'ignore_invalid_headers',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server',
  },
  {
    name: 'internal',
    possibleValues: '',
    default: '',
    context: 'location',
  },
  {
    name: 'keepalive_disable',
    possibleValues: 'none | browser ...',
    default: 'msie6',
    context: 'http, server, location',
  },
  {
    name: 'keepalive_requests',
    possibleValues: 'number',
    default: '100',
    context: 'http, server, location',
  },
  {
    name: 'keepalive_timeout',
    possibleValues: 'timeout [header_timeout]',
    default: '75s',
    context: 'http, server, location',
  },
  {
    name: 'large_client_header_buffers',
    possibleValues: 'number size',
    default: '4 8k',
    context: 'http, server',
  },
  // {
  //   name: 'limit_except',
  //   possibleValues: 'method block',
  //   default: '-',
  //   context: 'location',
  // },
  {
    name: 'limit_rate',
    possibleValues: 'rate',
    default: '0',
    context: 'http, server, location, if in location',
  },
  {
    name: 'limit_rate_after',
    possibleValues: 'size',
    default: '0',
    context: 'http, server, location, if in location',
  },
  {
    name: 'lingering_close',
    possibleValues: 'off | on | always',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'lingering_time',
    possibleValues: 'time',
    default: '30s',
    context: 'http, server, location',
  },
  {
    name: 'lingering_timeout',
    possibleValues: 'time',
    default: '5s',
    context: 'http, server, location',
  },
  {
    name: 'listen',
    possibleValues: 'address[:port] [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] ',
    default: '*:80 | *:8000',
    context: 'server',
  },
  // {
  //   name: 'location',
  //   possibleValues: '[ = | ~ | ~* | ^~ ] uri block',
  //   default: '-',
  //   context: 'server, location',
  // },
  {
    name: 'log_not_found',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'log_subrequest',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'max_ranges',
    possibleValues: 'number',
    default: '-',
    context: 'http, server, location',
  },
  {
    name: 'merge_slashes',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server',
  },
  {
    name: 'msie_padding',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'msie_refresh',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'open_file_cache_errors',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'open_file_cache_min_uses',
    possibleValues: 'number',
    default: '1',
    context: 'http, server, location',
  },
  {
    name: 'open_file_cache_valid',
    possibleValues: 'time',
    default: '60s',
    context: 'http, server, location',
  },
  {
    name: 'open_file_cache',
    possibleValues: 'off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'output_buffers',
    possibleValues: 'number size',
    default: '2 32k',
    context: 'http, server, location',
  },
  {
    name: 'port_in_redirect',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'postpone_output',
    possibleValues: 'size',
    default: '1460',
    context: 'http, server, location',
  },
  {
    name: 'read_ahead',
    possibleValues: 'size',
    default: '0',
    context: 'http, server, location',
  },
  {
    name: 'recursive_error_pages',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'request_pool_size',
    possibleValues: 'size',
    default: '4k',
    context: 'http, server',
  },
  {
    name: 'reset_timedout_connection',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'resolver_timeout',
    possibleValues: 'time',
    default: '30s',
    context: 'http, server, location',
  },
  {
    name: 'resolver',
    possibleValues: 'address ... [valid=time] [ipv6=on|off]',
    default: '-',
    context: 'http, server, location',
  },
  {
    name: 'root',
    possibleValues: 'path',
    default: 'html',
    context: 'http, server, location, if in location',
  },
  {
    name: 'satisfy',
    possibleValues: 'all | any',
    default: 'all',
    context: 'http, server, location',
  },
  {
    name: 'send_lowat',
    possibleValues: 'size',
    default: '0',
    context: 'http, server, location',
  },
  {
    name: 'send_timeout',
    possibleValues: 'time',
    default: '60s',
    context: 'http, server, location',
  },
  {
    name: 'sendfile_max_chunk',
    possibleValues: 'size',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'sendfile',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location, if in location',
  },
  {
    name: 'server_name_in_redirect',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'server_names_hash_bucket_size',
    possibleValues: 'size',
    default: '32|64|128',
    context: 'http',
  },
  {
    name: 'server_names_hash_max_size',
    possibleValues: 'size',
    default: '512',
    context: 'http',
  },
  {
    name: 'server_name',
    possibleValues: 'name ...',
    default: '-',
    context: 'server',
  },
  {
    name: 'server_tokens',
    possibleValues: 'on | off | build | string',
    default: 'on',
    context: 'http, server, location',
  },
  // {
  //   name: 'server',
  //   possibleValues: 'block',
  //   default: '-',
  //   context: 'http',
  // },
  {
    name: 'tcp_nodelay',
    possibleValues: 'on | off',
    default: 'on',
    context: 'http, server, location',
  },
  {
    name: 'tcp_nopush',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server, location',
  },
  {
    name: 'try_files',
    possibleValues: 'file ... uri',
    default: '-',
    context: 'server, location',
  },
  {
    name: 'types_hash_bucket_size',
    possibleValues: 'size',
    default: '64',
    context: 'http, server, location',
  },
  {
    name: 'types_hash_max_size',
    possibleValues: 'size',
    default: '1024',
    context: 'http, server, location',
  },
  // {
  //   name: 'types',
  //   possibleValues: 'block',
  //   default:
  //     `types {
  //         text/html  html;
  //         image/gif  gif;
  //         image/jpeg jpg;
  //     }`
  //   ,
  //   context: 'http, server, location',
  // },
  {
    name: 'underscores_in_headers',
    possibleValues: 'on | off',
    default: 'off',
    context: 'http, server',
  },
  {
    name: 'variables_hash_bucket_size',
    possibleValues: 'size',
    default: '64',
    context: 'http',
  },
  {
    name: 'variables_hash_max_size',
    possibleValues: 'size',
    default: '1024',
    context: 'http',
  },
]

module.exports = {
  getDirectives() {
    return directives
  },
}
